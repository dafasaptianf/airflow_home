{"timestamp":"2025-10-26T01:00:02.374042Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-26T01:00:02.377131Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_dag_from_scripts.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-26T01:00:02.551319Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.551982Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.552694Z","level":"info","event":"Current task name:run_etl_process","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.553186Z","level":"info","event":"Dag name:etl_retail_transactions_dag","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.556148Z","level":"info","event":"Starting ETL Process","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.556732Z","level":"info","event":"Extracting data from source_db...","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.663251Z","level":"warning","event":"pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.","category":"UserWarning","filename":"/opt/airflow/dags/etl_dag_from_scripts.py","lineno":20,"logger":"py.warnings"}
{"timestamp":"2025-10-26T01:00:02.677176Z","level":"info","event":"[Extract] 3 rows extracted from source_db","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.677693Z","level":"info","event":"Transforming data (convert timestamps to UTC)...","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.687575Z","level":"info","event":"[Transform] 3 rows after transformation","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.687960Z","level":"info","event":"Loading data to warehouse_db...","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.759856Z","level":"info","event":"Data successfully loaded into warehouse_db","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.760650Z","level":"info","event":"ETL process completed successfully!","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.760831Z","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-26T01:00:02.789506Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.789978Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-26T01:00:02.794903Z","level":"info","event":"Task operator:<Task(PythonOperator): run_etl_process>","logger":"task.stdout"}
